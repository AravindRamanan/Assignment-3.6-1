1) Can you overload a method with same return type.? Explain your answer with proper logic
        Yes, it can be overloaded with same return type only if the argument lists  that are passed is different for both methods.
        Construct a method which involves finding sum for 2 numbers 
        construct another method which involves finding sum for 3 numbers 
        here the arguments lists passed are different.
        This method can be overloaded only if number of parameters differ from each other
        
 import java.util.Scanner;
public class acad { 
public static int add(int a , int b)
{ 
return a+b;
}
public static int  add(int a,int b,int c)       
{
    int d=a+b+c;
     return d;
}

public static void main(String args[])
{
    Scanner sc= new Scanner(System.in);

    int a = sc.nextInt();//reading first input
    int b = sc.nextInt();//reading second input
    int c=  sc.nextInt();//reading third input
    int x=add(a,b);                 
    System.out.println(x);
    int y=add(a,b,c);                   
    System.out.println(y);
    }
}


2.Write a program in Java using Arrays, that sorts the element in a descending order.


 import java.util.Arrays;
import java.util.Scanner;


public class acad { 
public static void main(String args[]) {

Scanner sc=new Scanner(System.in);
int n=sc.nextInt();                               
int b[]=new int[n];                              
for(int i=0;i<n;i++)
{
    b[i]=sc.nextInt();                            
}
Arrays.sort(b); //sorting the array                                   
for(int i=n-1;i>=0;i--) { System.out.println(b[i]);
}

}}
